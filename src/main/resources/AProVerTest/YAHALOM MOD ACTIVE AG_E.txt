simulating YAHALOM.asm
INFO - parsing file C:\Users\gioeg\AProVerDirectory\Aprover\src\main\resources\AProVerTest\YAHALOM.asm
INFO - file successfully parsed for asm YAHALOM
Running interactively YAHALOM.asm
INITIAL STATE:Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
Insert a symbol of Receiver in [AG_A, AG_B, AG_E, AG_S] for chosenReceiver:
AG_E
Insert a symbol of Modality in [ACTIVE, PASSIVE] for chosenMode:
ACTIVE
<State 0 (monitored)>
chosenMode=ACTIVE
chosenReceiver=AG_E
</State 0 (monitored)>
<UpdateSet - 0>
internalStateS(agentS)=WAITING_MB
messageField(agentA,agentE,1,MA)=CA
messageField(agentA,agentE,2,MA)=NA
protocolMessage(agentA,agentE)=MA
</UpdateSet>
<State 1 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=IDLE_MA
internalStateB(agentB)=WAITING_MA
internalStateS(agentS)=WAITING_MB
messageField(agentA,agentE,1,MA)=CA
messageField(agentA,agentE,2,MA)=NA
mode=ACTIVE
protocolMessage(agentA,agentE)=MA
protocolMessage(agentB,agentE)=undef
protocolMessage(agentE,agentA)=undef
protocolMessage(agentE,agentB)=undef
protocolMessage(agentE,agentS)=undef
protocolMessage(agentS,agentE)=undef
receiver=AG_E
</State 1 (controlled)>
<UpdateSet - 1>
internalStateS(agentS)=WAITING_MB
knowsIdentityCertificate(agentE,CA)=true
knowsNonce(agentE,NA)=true
messageField(agentA,agentE,1,MA)=CA
messageField(agentA,agentE,2,MA)=NA
messageField(agentE,agentB,1,MA)=CA
messageField(agentE,agentB,2,MA)=NA
protocolMessage(agentA,agentE)=MA
protocolMessage(agentE,agentB)=MA
</UpdateSet>
<State 2 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=IDLE_MA
internalStateB(agentB)=WAITING_MA
internalStateS(agentS)=WAITING_MB
knowsIdentityCertificate(agentE,CA)=true
knowsNonce(agentE,NA)=true
messageField(agentA,agentE,1,MA)=CA
messageField(agentA,agentE,2,MA)=NA
messageField(agentE,agentB,1,MA)=CA
messageField(agentE,agentB,2,MA)=NA
mode=ACTIVE
protocolMessage(agentA,agentE)=MA
protocolMessage(agentB,agentE)=undef
protocolMessage(agentE,agentA)=undef
protocolMessage(agentE,agentB)=MA
protocolMessage(agentE,agentS)=undef
protocolMessage(agentS,agentE)=undef
receiver=AG_E
</State 2 (controlled)>
<UpdateSet - 2>
internalStateA(agentA)=WAITING_MC
internalStateS(agentS)=WAITING_MB
knowsIdentityCertificate(agentB,CA)=true
knowsOther(agentB,NA)=true
messageField(agentA,agentE,1,MA)=CA
messageField(agentA,agentE,2,MA)=NA
messageField(agentB,agentE,1,MB)=CB
messageField(agentB,agentE,2,MB)=CA
messageField(agentB,agentE,3,MB)=NA
messageField(agentB,agentE,4,MB)=NB
protocolMessage(agentA,agentE)=MA
protocolMessage(agentB,agentE)=MB
symEnc(MB,1,1,3)=KES
</UpdateSet>
<State 3 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=WAITING_MC
internalStateB(agentB)=WAITING_MA
internalStateS(agentS)=WAITING_MB
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsNonce(agentE,NA)=true
knowsOther(agentB,NA)=true
messageField(agentA,agentE,1,MA)=CA
messageField(agentA,agentE,2,MA)=NA
messageField(agentB,agentE,1,MB)=CB
messageField(agentB,agentE,2,MB)=CA
messageField(agentB,agentE,3,MB)=NA
messageField(agentB,agentE,4,MB)=NB
messageField(agentE,agentB,1,MA)=CA
messageField(agentE,agentB,2,MA)=NA
mode=ACTIVE
protocolMessage(agentA,agentE)=MA
protocolMessage(agentB,agentE)=MB
protocolMessage(agentE,agentA)=undef
protocolMessage(agentE,agentB)=MA
protocolMessage(agentE,agentS)=undef
protocolMessage(agentS,agentE)=undef
receiver=AG_E
symEnc(MB,1,1,3)=KES
</State 3 (controlled)>
<UpdateSet - 3>
internalStateA(agentA)=WAITING_MC
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CB)=true
knowsOther(agentB,NA)=true
messageField(agentB,agentE,1,MB)=CB
messageField(agentB,agentE,2,MB)=CA
messageField(agentB,agentE,3,MB)=NA
messageField(agentB,agentE,4,MB)=NB
messageField(agentE,agentS,1,MB)=CB
messageField(agentE,agentS,2,MA)=CA
messageField(agentE,agentS,3,MA)=NA
messageField(agentE,agentS,4,MA)=NB
protocolMessage(agentB,agentE)=MB
protocolMessage(agentE,agentS)=MB
symEnc(MB,1,1,3)=KES
symEnc(MB,1,2,4)=KES
</UpdateSet>
<State 4 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=WAITING_MC
internalStateB(agentB)=WAITING_MA
internalStateS(agentS)=WAITING_MB
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsIdentityCertificate(agentE,CB)=true
knowsNonce(agentE,NA)=true
knowsOther(agentB,NA)=true
knowsSymKey(agentE,undef)=false
messageField(agentA,agentE,1,MA)=CA
messageField(agentA,agentE,2,MA)=NA
messageField(agentB,agentE,1,MB)=CB
messageField(agentB,agentE,2,MB)=CA
messageField(agentB,agentE,3,MB)=NA
messageField(agentB,agentE,4,MB)=NB
messageField(agentE,agentB,1,MA)=CA
messageField(agentE,agentB,2,MA)=NA
messageField(agentE,agentS,1,MB)=CB
messageField(agentE,agentS,2,MA)=CA
messageField(agentE,agentS,3,MA)=NA
messageField(agentE,agentS,4,MA)=NB
mode=ACTIVE
protocolMessage(agentA,agentE)=MA
protocolMessage(agentB,agentE)=MB
protocolMessage(agentE,agentA)=undef
protocolMessage(agentE,agentB)=MA
protocolMessage(agentE,agentS)=MB
protocolMessage(agentS,agentE)=undef
receiver=AG_E
symEnc(MB,1,1,3)=KES
symEnc(MB,1,2,4)=KES
</State 4 (controlled)>
<UpdateSet - 4>
internalStateA(agentA)=WAITING_MC
knowsIdentityCertificate(agentB,CA)=true
knowsOther(agentB,NA)=true
messageField(agentB,agentE,1,MB)=CB
messageField(agentB,agentE,2,MB)=CA
messageField(agentB,agentE,3,MB)=NA
messageField(agentB,agentE,4,MB)=NB
protocolMessage(agentB,agentE)=MB
symEnc(MB,1,1,3)=KES
</UpdateSet>
<State 5 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=WAITING_MC
internalStateB(agentB)=WAITING_MA
internalStateS(agentS)=WAITING_MB
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsIdentityCertificate(agentE,CB)=true
knowsNonce(agentE,NA)=true
knowsOther(agentB,NA)=true
knowsSymKey(agentE,undef)=false
knowsSymKey(agentS,KES)=false
messageField(agentA,agentE,1,MA)=CA
messageField(agentA,agentE,2,MA)=NA
messageField(agentB,agentE,1,MB)=CB
messageField(agentB,agentE,2,MB)=CA
messageField(agentB,agentE,3,MB)=NA
messageField(agentB,agentE,4,MB)=NB
messageField(agentE,agentB,1,MA)=CA
messageField(agentE,agentB,2,MA)=NA
messageField(agentE,agentS,1,MB)=CB
messageField(agentE,agentS,2,MA)=CA
messageField(agentE,agentS,3,MA)=NA
messageField(agentE,agentS,4,MA)=NB
mode=ACTIVE
protocolMessage(agentA,agentE)=MA
protocolMessage(agentB,agentE)=MB
protocolMessage(agentE,agentA)=undef
protocolMessage(agentE,agentB)=MA
protocolMessage(agentE,agentS)=MB
protocolMessage(agentS,agentE)=undef
receiver=AG_E
symEnc(MB,1,1,3)=KES
symEnc(MB,1,2,4)=KES
</State 5 (controlled)>
FINAL STATE: Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=WAITING_MC
internalStateB(agentB)=WAITING_MA
internalStateS(agentS)=WAITING_MB
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsIdentityCertificate(agentE,CB)=true
knowsNonce(agentE,NA)=true
knowsOther(agentB,NA)=true
knowsSymKey(agentE,undef)=false
knowsSymKey(agentS,KES)=false
messageField(agentA,agentE,1,MA)=CA
messageField(agentA,agentE,2,MA)=NA
messageField(agentB,agentE,1,MB)=CB
messageField(agentB,agentE,2,MB)=CA
messageField(agentB,agentE,3,MB)=NA
messageField(agentB,agentE,4,MB)=NB
messageField(agentE,agentB,1,MA)=CA
messageField(agentE,agentB,2,MA)=NA
messageField(agentE,agentS,1,MB)=CB
messageField(agentE,agentS,2,MA)=CA
messageField(agentE,agentS,3,MA)=NA
messageField(agentE,agentS,4,MA)=NB
mode=ACTIVE
protocolMessage(agentA,agentE)=MA
protocolMessage(agentB,agentE)=MB
protocolMessage(agentE,agentA)=undef
protocolMessage(agentE,agentB)=MA
protocolMessage(agentE,agentS)=MB
protocolMessage(agentS,agentE)=undef
receiver=AG_E
self=agentE
symEnc(MB,1,1,3)=KES
symEnc(MB,1,2,4)=KES
run terminated
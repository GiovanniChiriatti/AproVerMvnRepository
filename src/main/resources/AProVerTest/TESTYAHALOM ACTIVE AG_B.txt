
** Simulation C:\Users\gioeg\AProVerDirectory\Aprover\src\main\resources\AProVerTest\test4YAHALOM.avalla **

build the asm from scenario C:\Users\gioeg\AProVerDirectory\Aprover\src\main\resources\AProVerTest\TestYAHALOM.asm
parsing file C:\Users\gioeg\AProVerDirectory\Aprover\src\main\resources\AProVerTest\TestYAHALOM.asm
file successfully parsed for asm TestYAHALOM
file:///C:/Users/gioeg/AProVerDirectory/Aprover/src/main/resources/AProVerTest/TestYAHALOM.asm
parsing file C:\Users\gioeg\AppData\Local\Temp\asms_foravalla5354481710944383933\__tempAsmetaV15635080819211163783.asm
file successfully parsed for asm __tempAsmetaV15635080819211163783
check succeeded: internalStateA(agentA)=IDLE_REQCOM 
check succeeded: internalStateB(agentB)=WAITING_ENCKBS 
check succeeded: internalStateS(agentS)=WAITING_GENKEYSES 
check succeeded: knowsNonce(agentA,NA)=true 
check succeeded: knowsNonce(agentB,NB)=true 
check succeeded: knowsIdentityCertificate(agentA, CA)=true 
check succeeded: knowsIdentityCertificate(agentB, CA)=true 
check succeeded: knowsIdentityCertificate(agentB, CB)=true 
check succeeded: knowsIdentityCertificate(agentS, CB)=true 
check succeeded: knowsSymKey(agentA, KAS)=true 
check succeeded: knowsSymKey(agentB, KBS)=true 
check succeeded: knowsSymKey(agentE, KES)=true 
check succeeded: knowsSymKey(agentS, KAS)=true 
check succeeded: knowsSymKey(agentS, KBS)=true 
check succeeded: knowsSymKey(agentS, KAB)=true 
check succeeded: mode=ACTIVE 
check succeeded: receiver=AG_B 
<UpdateSet - 0>
internalStateA(agentA)=WAITING_FRWVRNB
messageField(agentA,agentE,1,REQCOM)=CA
messageField(agentA,agentE,2,REQCOM)=NA
protocolMessage(0,agentA,agentE)=REQCOM
result=1
step__=1
</UpdateSet>
<State 1 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=WAITING_FRWVRNB
messageField(agentA,agentE,1,REQCOM)=CA
messageField(agentA,agentE,2,REQCOM)=NA
protocolMessage(0,agentA,agentE)=REQCOM
result=1
step__=1
</State 1 (controlled)>
check succeeded: mode=ACTIVE 
check succeeded: protocolMessage(0,agentA,agentE)=REQCOM 
check succeeded: messageField(agentA,agentE,1,REQCOM)=CA 
check succeeded: messageField(agentA,agentE,2,REQCOM)=NA 
check succeeded: internalStateA(agentA)=WAITING_FRWVRNB 
check succeeded: protocolMessage(0,agentA,agentE)=REQCOM 
check succeeded: protocolMessage(0,agentE,agentB)!=REQCOM 
<UpdateSet - 1>
knowsIdentityCertificate(agentE,CA)=true
knowsNonce(agentE,NA)=true
messageField(agentE,agentB,1,REQCOM)=CA
messageField(agentE,agentB,2,REQCOM)=NA
protocolMessage(0,agentE,agentB)=REQCOM
result=1
step__=2
</UpdateSet>
<State 2 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=WAITING_FRWVRNB
knowsIdentityCertificate(agentE,CA)=true
knowsNonce(agentE,NA)=true
messageField(agentA,agentE,1,REQCOM)=CA
messageField(agentA,agentE,2,REQCOM)=NA
messageField(agentE,agentB,1,REQCOM)=CA
messageField(agentE,agentB,2,REQCOM)=NA
protocolMessage(0,agentA,agentE)=REQCOM
protocolMessage(0,agentE,agentB)=REQCOM
result=1
step__=2
</State 2 (controlled)>
check succeeded: mode=ACTIVE 
check succeeded: protocolMessage(0,agentE,agentB)=REQCOM 
check succeeded: messageField(agentE,agentB,1,REQCOM)=messageField(agentA,agentE,1,REQCOM) 
check succeeded: messageField(agentA,agentE,1,REQCOM)=CA 
check succeeded: messageField(agentE,agentB,1,REQCOM)=CA 
check succeeded: messageField(agentE,agentB,2,REQCOM)=messageField(agentA,agentE,2,REQCOM) 
check succeeded: messageField(agentA,agentE,2,REQCOM)=NA 
check succeeded: messageField(agentE,agentB,2,REQCOM)=NA 
check succeeded: knowsIdentityCertificate(agentE,messageField(agentA,agentE,1,REQCOM))=true 
check succeeded: knowsNonce(agentE,messageField(agentA,agentE,2,REQCOM))=true 
check succeeded: knowsIdentityCertificate(agentE,CA)=true 
check succeeded: knowsNonce(agentE,NA)=true 
check succeeded: internalStateB(agentB)=WAITING_ENCKBS 
check succeeded: protocolMessage(0,agentE,agentB)=REQCOM 
<UpdateSet - 2>
internalStateB(agentB)=CHECK_END_B
knowsIdentityCertificate(agentB,CA)=true
knowsNonce(agentB,NA)=true
messageField(agentB,agentE,1,ENCKBS)=CB
messageField(agentB,agentE,2,ENCKBS)=CA
messageField(agentB,agentE,3,ENCKBS)=NA
messageField(agentB,agentE,4,ENCKBS)=NB
protocolMessage(1,agentB,agentE)=ENCKBS
result=1
step__=3
symEnc(ENCKBS,1,2,4)=KBS
</UpdateSet>
<State 3 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=WAITING_FRWVRNB
internalStateB(agentB)=CHECK_END_B
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsNonce(agentB,NA)=true
knowsNonce(agentE,NA)=true
messageField(agentA,agentE,1,REQCOM)=CA
messageField(agentA,agentE,2,REQCOM)=NA
messageField(agentB,agentE,1,ENCKBS)=CB
messageField(agentB,agentE,2,ENCKBS)=CA
messageField(agentB,agentE,3,ENCKBS)=NA
messageField(agentB,agentE,4,ENCKBS)=NB
messageField(agentE,agentB,1,REQCOM)=CA
messageField(agentE,agentB,2,REQCOM)=NA
protocolMessage(0,agentA,agentE)=REQCOM
protocolMessage(0,agentE,agentB)=REQCOM
protocolMessage(1,agentB,agentE)=ENCKBS
result=1
step__=3
symEnc(ENCKBS,1,2,4)=KBS
</State 3 (controlled)>
check succeeded: mode=ACTIVE 
check succeeded: knowsIdentityCertificate(agentB,messageField(agentE,agentB,1,REQCOM))=true 
check succeeded: messageField(agentE,agentB,1,REQCOM)=CA 
check succeeded: knowsIdentityCertificate(agentB,CA)=true 
check succeeded: knowsNonce(agentB,messageField(agentE,agentB,2,REQCOM))=true 
check succeeded: messageField(agentE,agentB,2,REQCOM)=NA 
check succeeded: knowsNonce(agentB,NA)=true 
check succeeded: protocolMessage(1,agentB,agentE)=ENCKBS 
check succeeded: messageField(agentB,agentE,1,ENCKBS)=CB 
check succeeded: messageField(agentB,agentE,2,ENCKBS)=messageField(agentE,agentB,1,REQCOM) 
check succeeded: messageField(agentB,agentE,2,ENCKBS)=CA 
check succeeded: messageField(agentB,agentE,3,ENCKBS)=messageField(agentE,agentB,2,REQCOM) 
check succeeded: messageField(agentB,agentE,3,ENCKBS)=NA 
check succeeded: messageField(agentB,agentE,4,ENCKBS)=NB 
check succeeded: symEnc(ENCKBS,1,2,4)=KBS 
check succeeded: internalStateB(agentB)=CHECK_END_B 
check succeeded: protocolMessage(1,agentB,agentE)=ENCKBS 
check succeeded: protocolMessage(1,agentE,agentS)!=ENCKBS 
check succeeded: symDec(ENCKBS,1,2,4,agentE)=false 
check succeeded: symEnc(ENCKBS,1,2,4)=KBS 
<UpdateSet - 3>
knowsIdentityCertificate(agentE,CB)=true
messageField(agentE,agentS,1,ENCKBS)=CB
messageField(agentE,agentS,2,ENCKBS)=CA
messageField(agentE,agentS,3,ENCKBS)=NA
messageField(agentE,agentS,4,ENCKBS)=NB
protocolMessage(1,agentE,agentS)=ENCKBS
result=1
step__=4
</UpdateSet>
<State 4 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=WAITING_FRWVRNB
internalStateB(agentB)=CHECK_END_B
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsIdentityCertificate(agentE,CB)=true
knowsNonce(agentB,NA)=true
knowsNonce(agentE,NA)=true
messageField(agentA,agentE,1,REQCOM)=CA
messageField(agentA,agentE,2,REQCOM)=NA
messageField(agentB,agentE,1,ENCKBS)=CB
messageField(agentB,agentE,2,ENCKBS)=CA
messageField(agentB,agentE,3,ENCKBS)=NA
messageField(agentB,agentE,4,ENCKBS)=NB
messageField(agentE,agentB,1,REQCOM)=CA
messageField(agentE,agentB,2,REQCOM)=NA
messageField(agentE,agentS,1,ENCKBS)=CB
messageField(agentE,agentS,2,ENCKBS)=CA
messageField(agentE,agentS,3,ENCKBS)=NA
messageField(agentE,agentS,4,ENCKBS)=NB
protocolMessage(0,agentA,agentE)=REQCOM
protocolMessage(0,agentE,agentB)=REQCOM
protocolMessage(1,agentB,agentE)=ENCKBS
protocolMessage(1,agentE,agentS)=ENCKBS
result=1
step__=4
symEnc(ENCKBS,1,2,4)=KBS
</State 4 (controlled)>
check succeeded: mode=ACTIVE 
check succeeded: protocolMessage(1,agentE,agentS)=ENCKBS 
check succeeded: messageField(agentE,agentS,1,ENCKBS)=messageField(agentB,agentE,1,ENCKBS) 
check succeeded: messageField(agentB,agentE,1,ENCKBS)=CB 
check succeeded: messageField(agentB,agentE,1,ENCKBS)=CB 
check succeeded: messageField(agentE,agentS,2,ENCKBS)=messageField(agentB,agentE,2,ENCKBS) 
check succeeded: messageField(agentB,agentE,2,ENCKBS)=CA 
check succeeded: messageField(agentB,agentE,2,ENCKBS)=CA 
check succeeded: messageField(agentE,agentS,3,ENCKBS)=messageField(agentB,agentE,3,ENCKBS) 
check succeeded: messageField(agentB,agentE,3,ENCKBS)=NA 
check succeeded: messageField(agentB,agentE,3,ENCKBS)=NA 
check succeeded: messageField(agentE,agentS,4,ENCKBS)=messageField(agentB,agentE,4,ENCKBS) 
check succeeded: messageField(agentB,agentE,4,ENCKBS)=NB 
check succeeded: messageField(agentB,agentE,4,ENCKBS)=NB 
check succeeded: knowsIdentityCertificate(agentE,messageField(agentB,agentE,1,ENCKBS))=true 
check succeeded: knowsIdentityCertificate(agentE,CB)=true 
check succeeded: knowsIdentityCertificate(agentE,messageField(agentB,agentE,2,ENCKBS))=true 
check succeeded: knowsIdentityCertificate(agentE,CA)=true 
check succeeded: knowsNonce(agentE,messageField(agentB,agentE,3,ENCKBS))=true 
check succeeded: knowsNonce(agentE,NA)=true 
check succeeded: knowsNonce(agentE,messageField(agentB,agentE,4,ENCKBS))=false 
check succeeded: knowsNonce(agentE,NB)=false 
check succeeded: internalStateS(agentS)=WAITING_GENKEYSES 
check succeeded: protocolMessage(1,agentE,agentS)=ENCKBS 
check succeeded: symDec(ENCKBS,1,2,4,agentS)=true 
<UpdateSet - 4>
internalStateS(agentS)=END_S
knowsIdentityCertificate(agentS,CA)=true
knowsIdentityCertificate(agentS,CB)=true
knowsNonce(agentS,NA)=true
knowsNonce(agentS,NB)=true
messageField(agentS,agentE,1,GENKEYSES)=CB
messageField(agentS,agentE,2,GENKEYSES)=KAB
messageField(agentS,agentE,3,GENKEYSES)=NA
messageField(agentS,agentE,4,GENKEYSES)=NB
messageField(agentS,agentE,5,GENKEYSES)=CA
messageField(agentS,agentE,6,GENKEYSES)=KAB
protocolMessage(2,agentS,agentE)=GENKEYSES
result=1
step__=5
symEnc(GENKEYSES,1,1,4)=KAS
symEnc(GENKEYSES,1,5,6)=KBS
</UpdateSet>
<State 5 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=WAITING_FRWVRNB
internalStateB(agentB)=CHECK_END_B
internalStateS(agentS)=END_S
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsIdentityCertificate(agentE,CB)=true
knowsIdentityCertificate(agentS,CA)=true
knowsIdentityCertificate(agentS,CB)=true
knowsNonce(agentB,NA)=true
knowsNonce(agentE,NA)=true
knowsNonce(agentS,NA)=true
knowsNonce(agentS,NB)=true
messageField(agentA,agentE,1,REQCOM)=CA
messageField(agentA,agentE,2,REQCOM)=NA
messageField(agentB,agentE,1,ENCKBS)=CB
messageField(agentB,agentE,2,ENCKBS)=CA
messageField(agentB,agentE,3,ENCKBS)=NA
messageField(agentB,agentE,4,ENCKBS)=NB
messageField(agentE,agentB,1,REQCOM)=CA
messageField(agentE,agentB,2,REQCOM)=NA
messageField(agentE,agentS,1,ENCKBS)=CB
messageField(agentE,agentS,2,ENCKBS)=CA
messageField(agentE,agentS,3,ENCKBS)=NA
messageField(agentE,agentS,4,ENCKBS)=NB
messageField(agentS,agentE,1,GENKEYSES)=CB
messageField(agentS,agentE,2,GENKEYSES)=KAB
messageField(agentS,agentE,3,GENKEYSES)=NA
messageField(agentS,agentE,4,GENKEYSES)=NB
messageField(agentS,agentE,5,GENKEYSES)=CA
messageField(agentS,agentE,6,GENKEYSES)=KAB
protocolMessage(0,agentA,agentE)=REQCOM
protocolMessage(0,agentE,agentB)=REQCOM
protocolMessage(1,agentB,agentE)=ENCKBS
protocolMessage(1,agentE,agentS)=ENCKBS
protocolMessage(2,agentS,agentE)=GENKEYSES
result=1
step__=5
symEnc(ENCKBS,1,2,4)=KBS
symEnc(GENKEYSES,1,1,4)=KAS
symEnc(GENKEYSES,1,5,6)=KBS
</State 5 (controlled)>
check succeeded: mode=ACTIVE 
check succeeded: knowsIdentityCertificate(agentS,messageField(agentE,agentS,1,ENCKBS))=true 
check succeeded: knowsIdentityCertificate(agentS,CB)=true 
check succeeded: messageField(agentE,agentS,1,ENCKBS)=CB 
check succeeded: knowsIdentityCertificate(agentS,messageField(agentE,agentS,2,ENCKBS))=true 
check succeeded: knowsIdentityCertificate(agentS,CA)=true 
check succeeded: messageField(agentE,agentS,2,ENCKBS)=CA 
check succeeded: knowsNonce(agentS,messageField(agentE,agentS,3,ENCKBS))=true 
check succeeded: knowsNonce(agentS,NA)=true 
check succeeded: messageField(agentE,agentS,3,ENCKBS)=NA 
check succeeded: knowsNonce(agentS,messageField(agentE,agentS,4,ENCKBS))=true 
check succeeded: knowsNonce(agentS,NB)=true 
check succeeded: messageField(agentE,agentS,4,ENCKBS)=NB 
check succeeded: protocolMessage(2,agentS,agentE)=GENKEYSES 
check succeeded: messageField(agentS,agentE,1,GENKEYSES)=messageField(agentE,agentS,1,ENCKBS) 
check succeeded: messageField(agentE,agentS,1,ENCKBS)=CB 
check succeeded: messageField(agentS,agentE,2,GENKEYSES)=KAB 
check succeeded: messageField(agentS,agentE,3,GENKEYSES)=messageField(agentE,agentS,3,ENCKBS) 
check succeeded: messageField(agentE,agentS,3,ENCKBS)=NA 
check succeeded: messageField(agentS,agentE,3,GENKEYSES)=NA 
check succeeded: messageField(agentS,agentE,4,GENKEYSES)=messageField(agentE,agentS,4,ENCKBS) 
check succeeded: messageField(agentE,agentS,4,ENCKBS)=NB 
check succeeded: messageField(agentS,agentE,4,GENKEYSES)=NB 
check succeeded: symEnc(GENKEYSES,1,1,4)=KAS 
check succeeded: messageField(agentS,agentE,5,GENKEYSES)=messageField(agentE,agentS,2,ENCKBS) 
check succeeded: messageField(agentE,agentS,2,ENCKBS)=CA 
check succeeded: messageField(agentS,agentE,5,GENKEYSES)=CA 
check succeeded: messageField(agentS,agentE,6,GENKEYSES)=KAB 
check succeeded: symEnc(GENKEYSES,1,5,6)=KBS 
check succeeded: internalStateS(agentS)=END_S 
check succeeded: protocolMessage(2,agentS,agentE)=GENKEYSES 
check succeeded: protocolMessage(2,agentE,agentB)!=GENKEYSES 
check succeeded: symDec(GENKEYSES,1,1,4,agentE)=false 
check succeeded: symDec(GENKEYSES,1,5,6,agentE)=false 
check succeeded: symEnc(GENKEYSES,1,1,4)=KAS 
check succeeded: symEnc(GENKEYSES,1,5,6)=KBS 
<UpdateSet - 5>
messageField(agentE,agentA,1,GENKEYSES)=CB
messageField(agentE,agentA,2,GENKEYSES)=KAB
messageField(agentE,agentA,3,GENKEYSES)=NA
messageField(agentE,agentA,4,GENKEYSES)=NB
messageField(agentE,agentA,5,GENKEYSES)=CA
messageField(agentE,agentA,6,GENKEYSES)=KAB
protocolMessage(2,agentE,agentA)=GENKEYSES
result=1
step__=6
</UpdateSet>
<State 6 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=WAITING_FRWVRNB
internalStateB(agentB)=CHECK_END_B
internalStateS(agentS)=END_S
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsIdentityCertificate(agentE,CB)=true
knowsIdentityCertificate(agentS,CA)=true
knowsIdentityCertificate(agentS,CB)=true
knowsNonce(agentB,NA)=true
knowsNonce(agentE,NA)=true
knowsNonce(agentS,NA)=true
knowsNonce(agentS,NB)=true
messageField(agentA,agentE,1,REQCOM)=CA
messageField(agentA,agentE,2,REQCOM)=NA
messageField(agentB,agentE,1,ENCKBS)=CB
messageField(agentB,agentE,2,ENCKBS)=CA
messageField(agentB,agentE,3,ENCKBS)=NA
messageField(agentB,agentE,4,ENCKBS)=NB
messageField(agentE,agentA,1,GENKEYSES)=CB
messageField(agentE,agentA,2,GENKEYSES)=KAB
messageField(agentE,agentA,3,GENKEYSES)=NA
messageField(agentE,agentA,4,GENKEYSES)=NB
messageField(agentE,agentA,5,GENKEYSES)=CA
messageField(agentE,agentA,6,GENKEYSES)=KAB
messageField(agentE,agentB,1,REQCOM)=CA
messageField(agentE,agentB,2,REQCOM)=NA
messageField(agentE,agentS,1,ENCKBS)=CB
messageField(agentE,agentS,2,ENCKBS)=CA
messageField(agentE,agentS,3,ENCKBS)=NA
messageField(agentE,agentS,4,ENCKBS)=NB
messageField(agentS,agentE,1,GENKEYSES)=CB
messageField(agentS,agentE,2,GENKEYSES)=KAB
messageField(agentS,agentE,3,GENKEYSES)=NA
messageField(agentS,agentE,4,GENKEYSES)=NB
messageField(agentS,agentE,5,GENKEYSES)=CA
messageField(agentS,agentE,6,GENKEYSES)=KAB
protocolMessage(0,agentA,agentE)=REQCOM
protocolMessage(0,agentE,agentB)=REQCOM
protocolMessage(1,agentB,agentE)=ENCKBS
protocolMessage(1,agentE,agentS)=ENCKBS
protocolMessage(2,agentE,agentA)=GENKEYSES
protocolMessage(2,agentS,agentE)=GENKEYSES
result=1
step__=6
symEnc(ENCKBS,1,2,4)=KBS
symEnc(GENKEYSES,1,1,4)=KAS
symEnc(GENKEYSES,1,5,6)=KBS
</State 6 (controlled)>
check succeeded: mode=ACTIVE 
check succeeded: protocolMessage(2,agentE,agentA)=GENKEYSES 
check succeeded: messageField(agentE,agentA,1,GENKEYSES)=messageField(agentS,agentE,1,GENKEYSES) 
check succeeded: messageField(agentS,agentE,1,GENKEYSES)=CB 
check succeeded: messageField(agentE,agentA,1,GENKEYSES)=CB 
check succeeded: messageField(agentE,agentA,2,GENKEYSES)=messageField(agentS,agentE,2,GENKEYSES) 
check succeeded: messageField(agentS,agentE,2,GENKEYSES)=KAB 
check succeeded: messageField(agentE,agentA,2,GENKEYSES)=KAB 
check succeeded: messageField(agentE,agentA,3,GENKEYSES)=messageField(agentS,agentE,3,GENKEYSES) 
check succeeded: messageField(agentS,agentE,3,GENKEYSES)=NA 
check succeeded: messageField(agentE,agentA,3,GENKEYSES)=NA 
check succeeded: messageField(agentE,agentA,4,GENKEYSES)=messageField(agentS,agentE,4,GENKEYSES) 
check succeeded: messageField(agentS,agentE,4,GENKEYSES)=NB 
check succeeded: messageField(agentE,agentA,4,GENKEYSES)=NB 
check succeeded: messageField(agentE,agentA,5,GENKEYSES)=messageField(agentS,agentE,5,GENKEYSES) 
check succeeded: messageField(agentS,agentE,5,GENKEYSES)=CA 
check succeeded: messageField(agentE,agentA,5,GENKEYSES)=CA 
check succeeded: messageField(agentE,agentA,6,GENKEYSES)=messageField(agentS,agentE,6,GENKEYSES) 
check succeeded: messageField(agentS,agentE,6,GENKEYSES)=KAB 
check succeeded: messageField(agentE,agentA,6,GENKEYSES)=KAB 
check succeeded: knowsIdentityCertificate(agentE,messageField(agentS,agentE,1,GENKEYSES))=true 
check succeeded: knowsIdentityCertificate(agentE,CB)=true 
check succeeded: messageField(agentS,agentE,1,GENKEYSES)=CB 
check succeeded: knowsSymKey(agentE,messageField(agentS,agentE,2,GENKEYSES))=false 
check succeeded: knowsSymKey(agentE,KAB)=false 
check succeeded: messageField(agentS,agentE,2,GENKEYSES)=KAB 
check succeeded: knowsNonce(agentE,messageField(agentS,agentE,3,GENKEYSES))=true 
check succeeded: knowsNonce(agentE,NA)=true 
check succeeded: messageField(agentS,agentE,3,GENKEYSES)=NA 
check succeeded: knowsNonce(agentE,messageField(agentS,agentE,4,GENKEYSES))=false 
check succeeded: knowsNonce(agentE,NB)=false 
check succeeded: messageField(agentS,agentE,4,GENKEYSES)=NB 
check succeeded: internalStateA(agentA)=WAITING_FRWVRNB 
check succeeded: protocolMessage(2,agentE,agentA)=GENKEYSES 
check succeeded: symDec(GENKEYSES,1,1,4,agentA)=true 
<UpdateSet - 6>
internalStateA(agentA)=END_A
knowsIdentityCertificate(agentA,CB)=true
knowsNonce(agentA,NA)=true
knowsNonce(agentA,NB)=true
knowsSymKey(agentA,KAB)=true
messageField(agentA,agentE,1,FRWVRNB)=CA
messageField(agentA,agentE,2,FRWVRNB)=KAB
messageField(agentA,agentE,3,FRWVRNB)=NB
protocolMessage(3,agentA,agentE)=FRWVRNB
result=1
step__=7
symEnc(FRWVRNB,1,1,2)=KBS
symEnc(FRWVRNB,1,3,3)=KAB
</UpdateSet>
<State 7 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=END_A
internalStateB(agentB)=CHECK_END_B
internalStateS(agentS)=END_S
knowsIdentityCertificate(agentA,CB)=true
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsIdentityCertificate(agentE,CB)=true
knowsIdentityCertificate(agentS,CA)=true
knowsIdentityCertificate(agentS,CB)=true
knowsNonce(agentA,NA)=true
knowsNonce(agentA,NB)=true
knowsNonce(agentB,NA)=true
knowsNonce(agentE,NA)=true
knowsNonce(agentS,NA)=true
knowsNonce(agentS,NB)=true
knowsSymKey(agentA,KAB)=true
messageField(agentA,agentE,1,FRWVRNB)=CA
messageField(agentA,agentE,1,REQCOM)=CA
messageField(agentA,agentE,2,FRWVRNB)=KAB
messageField(agentA,agentE,2,REQCOM)=NA
messageField(agentA,agentE,3,FRWVRNB)=NB
messageField(agentB,agentE,1,ENCKBS)=CB
messageField(agentB,agentE,2,ENCKBS)=CA
messageField(agentB,agentE,3,ENCKBS)=NA
messageField(agentB,agentE,4,ENCKBS)=NB
messageField(agentE,agentA,1,GENKEYSES)=CB
messageField(agentE,agentA,2,GENKEYSES)=KAB
messageField(agentE,agentA,3,GENKEYSES)=NA
messageField(agentE,agentA,4,GENKEYSES)=NB
messageField(agentE,agentA,5,GENKEYSES)=CA
messageField(agentE,agentA,6,GENKEYSES)=KAB
messageField(agentE,agentB,1,REQCOM)=CA
messageField(agentE,agentB,2,REQCOM)=NA
messageField(agentE,agentS,1,ENCKBS)=CB
messageField(agentE,agentS,2,ENCKBS)=CA
messageField(agentE,agentS,3,ENCKBS)=NA
messageField(agentE,agentS,4,ENCKBS)=NB
messageField(agentS,agentE,1,GENKEYSES)=CB
messageField(agentS,agentE,2,GENKEYSES)=KAB
messageField(agentS,agentE,3,GENKEYSES)=NA
messageField(agentS,agentE,4,GENKEYSES)=NB
messageField(agentS,agentE,5,GENKEYSES)=CA
messageField(agentS,agentE,6,GENKEYSES)=KAB
protocolMessage(0,agentA,agentE)=REQCOM
protocolMessage(0,agentE,agentB)=REQCOM
protocolMessage(1,agentB,agentE)=ENCKBS
protocolMessage(1,agentE,agentS)=ENCKBS
protocolMessage(2,agentE,agentA)=GENKEYSES
protocolMessage(2,agentS,agentE)=GENKEYSES
protocolMessage(3,agentA,agentE)=FRWVRNB
result=1
step__=7
symEnc(ENCKBS,1,2,4)=KBS
symEnc(FRWVRNB,1,1,2)=KBS
symEnc(FRWVRNB,1,3,3)=KAB
symEnc(GENKEYSES,1,1,4)=KAS
symEnc(GENKEYSES,1,5,6)=KBS
</State 7 (controlled)>
check succeeded: mode=ACTIVE 
check succeeded: knowsIdentityCertificate(agentA,messageField(agentE,agentA,1,GENKEYSES))=true 
check succeeded: messageField(agentE,agentA,1,GENKEYSES)=CB 
check succeeded: knowsIdentityCertificate(agentA,CB)=true 
check succeeded: knowsSymKey(agentA,messageField(agentE,agentA,2,GENKEYSES))=true 
check succeeded: messageField(agentE,agentA,2,GENKEYSES)=KAB 
check succeeded: knowsSymKey(agentA,KAB)=true 
check succeeded: knowsNonce(agentA,messageField(agentE,agentA,3,GENKEYSES))=true 
check succeeded: messageField(agentE,agentA,3,GENKEYSES)=NA 
check succeeded: knowsNonce(agentA,NA)=true 
check succeeded: knowsNonce(agentA,messageField(agentE,agentA,4,GENKEYSES))=true 
check succeeded: messageField(agentE,agentA,4,GENKEYSES)=NB 
check succeeded: knowsNonce(agentA,NB)=true 
check succeeded: protocolMessage(3,agentA,agentE)=FRWVRNB 
check succeeded: messageField(agentA,agentE,1,FRWVRNB)=messageField(agentE,agentA,5,GENKEYSES) 
check succeeded: messageField(agentE,agentA,5,GENKEYSES)=CA 
check succeeded: messageField(agentA,agentE,1,FRWVRNB)=CA 
check succeeded: messageField(agentA,agentE,2,FRWVRNB)=messageField(agentE,agentA,6,GENKEYSES) 
check succeeded: messageField(agentE,agentA,6,GENKEYSES)=KAB 
check succeeded: messageField(agentA,agentE,2,FRWVRNB)=KAB 
check succeeded: symEnc(FRWVRNB,1,1,2)=KBS 
check succeeded: messageField(agentA,agentE,3,FRWVRNB)=messageField(agentE,agentA,4,GENKEYSES) 
check succeeded: messageField(agentE,agentA,4,GENKEYSES)=NB 
check succeeded: messageField(agentA,agentE,3,FRWVRNB)=NB 
check succeeded: symEnc(FRWVRNB,1,3,3)=messageField(agentE,agentA,6,GENKEYSES) 
check succeeded: symEnc(FRWVRNB,1,3,3)=KAB 
check succeeded: internalStateA(agentA)=END_A 
check succeeded: protocolMessage(3,agentA,agentE)=FRWVRNB 
check succeeded: protocolMessage(3,agentE,agentB)!=GENKEYSES 
check succeeded: symDec(FRWVRNB,1,1,2,agentE)=false 
check succeeded: symDec(FRWVRNB,1,3,3,agentE)=false 
<UpdateSet - 7>
messageField(agentE,agentB,1,FRWVRNB)=CA
messageField(agentE,agentB,2,FRWVRNB)=KAB
messageField(agentE,agentB,3,FRWVRNB)=NB
protocolMessage(3,agentE,agentB)=FRWVRNB
result=1
step__=8
</UpdateSet>
<State 8 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=END_A
internalStateB(agentB)=CHECK_END_B
internalStateS(agentS)=END_S
knowsIdentityCertificate(agentA,CB)=true
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsIdentityCertificate(agentE,CB)=true
knowsIdentityCertificate(agentS,CA)=true
knowsIdentityCertificate(agentS,CB)=true
knowsNonce(agentA,NA)=true
knowsNonce(agentA,NB)=true
knowsNonce(agentB,NA)=true
knowsNonce(agentE,NA)=true
knowsNonce(agentS,NA)=true
knowsNonce(agentS,NB)=true
knowsSymKey(agentA,KAB)=true
messageField(agentA,agentE,1,FRWVRNB)=CA
messageField(agentA,agentE,1,REQCOM)=CA
messageField(agentA,agentE,2,FRWVRNB)=KAB
messageField(agentA,agentE,2,REQCOM)=NA
messageField(agentA,agentE,3,FRWVRNB)=NB
messageField(agentB,agentE,1,ENCKBS)=CB
messageField(agentB,agentE,2,ENCKBS)=CA
messageField(agentB,agentE,3,ENCKBS)=NA
messageField(agentB,agentE,4,ENCKBS)=NB
messageField(agentE,agentA,1,GENKEYSES)=CB
messageField(agentE,agentA,2,GENKEYSES)=KAB
messageField(agentE,agentA,3,GENKEYSES)=NA
messageField(agentE,agentA,4,GENKEYSES)=NB
messageField(agentE,agentA,5,GENKEYSES)=CA
messageField(agentE,agentA,6,GENKEYSES)=KAB
messageField(agentE,agentB,1,FRWVRNB)=CA
messageField(agentE,agentB,1,REQCOM)=CA
messageField(agentE,agentB,2,FRWVRNB)=KAB
messageField(agentE,agentB,2,REQCOM)=NA
messageField(agentE,agentB,3,FRWVRNB)=NB
messageField(agentE,agentS,1,ENCKBS)=CB
messageField(agentE,agentS,2,ENCKBS)=CA
messageField(agentE,agentS,3,ENCKBS)=NA
messageField(agentE,agentS,4,ENCKBS)=NB
messageField(agentS,agentE,1,GENKEYSES)=CB
messageField(agentS,agentE,2,GENKEYSES)=KAB
messageField(agentS,agentE,3,GENKEYSES)=NA
messageField(agentS,agentE,4,GENKEYSES)=NB
messageField(agentS,agentE,5,GENKEYSES)=CA
messageField(agentS,agentE,6,GENKEYSES)=KAB
protocolMessage(0,agentA,agentE)=REQCOM
protocolMessage(0,agentE,agentB)=REQCOM
protocolMessage(1,agentB,agentE)=ENCKBS
protocolMessage(1,agentE,agentS)=ENCKBS
protocolMessage(2,agentE,agentA)=GENKEYSES
protocolMessage(2,agentS,agentE)=GENKEYSES
protocolMessage(3,agentA,agentE)=FRWVRNB
protocolMessage(3,agentE,agentB)=FRWVRNB
result=1
step__=8
symEnc(ENCKBS,1,2,4)=KBS
symEnc(FRWVRNB,1,1,2)=KBS
symEnc(FRWVRNB,1,3,3)=KAB
symEnc(GENKEYSES,1,1,4)=KAS
symEnc(GENKEYSES,1,5,6)=KBS
</State 8 (controlled)>
check succeeded: mode=ACTIVE 
check succeeded: protocolMessage(3,agentE,agentB)=FRWVRNB 
check succeeded: messageField(agentE,agentB,1,FRWVRNB)=messageField(agentA,agentE,1,FRWVRNB) 
check succeeded: messageField(agentA,agentE,1,FRWVRNB)=CA 
check succeeded: messageField(agentE,agentB,1,FRWVRNB)=CA 
check succeeded: messageField(agentE,agentB,2,FRWVRNB)=messageField(agentA,agentE,2,FRWVRNB) 
check succeeded: messageField(agentA,agentE,2,FRWVRNB)=KAB 
check succeeded: messageField(agentE,agentB,2,FRWVRNB)=KAB 
check succeeded: messageField(agentE,agentB,3,FRWVRNB)=messageField(agentA,agentE,3,FRWVRNB) 
check succeeded: messageField(agentA,agentE,3,FRWVRNB)=NB 
check succeeded: messageField(agentE,agentB,3,FRWVRNB)=NB 
check succeeded: knowsIdentityCertificate(agentE,messageField(agentA,agentE,1,FRWVRNB))=true 
check succeeded: knowsIdentityCertificate(agentE,CA)=true 
check succeeded: messageField(agentA,agentE,1,FRWVRNB)=CA 
check succeeded: knowsSymKey(agentE,messageField(agentA,agentE,2,FRWVRNB))=false 
check succeeded: knowsSymKey(agentE,KAB)=false 
check succeeded: messageField(agentA,agentE,2,FRWVRNB)=KAB 
check succeeded: knowsNonce(agentE,messageField(agentA,agentE,3,FRWVRNB))=false 
check succeeded: knowsNonce(agentE,NB)=false 
check succeeded: messageField(agentA,agentE,3,FRWVRNB)=NB 
check succeeded: internalStateB(agentB)=CHECK_END_B 
check succeeded: protocolMessage(3,agentE,agentB)=FRWVRNB 
check succeeded: symDec(FRWVRNB,1,1,2,agentB)= true 
<UpdateSet - 8>
internalStateB(agentB)=END_B
knowsIdentityCertificate(agentB,CA)=true
knowsSymKey(agentB,KAB)=true
result=1
step__=9
</UpdateSet>
<State 9 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=END_A
internalStateB(agentB)=END_B
internalStateS(agentS)=END_S
knowsIdentityCertificate(agentA,CB)=true
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsIdentityCertificate(agentE,CB)=true
knowsIdentityCertificate(agentS,CA)=true
knowsIdentityCertificate(agentS,CB)=true
knowsNonce(agentA,NA)=true
knowsNonce(agentA,NB)=true
knowsNonce(agentB,NA)=true
knowsNonce(agentE,NA)=true
knowsNonce(agentS,NA)=true
knowsNonce(agentS,NB)=true
knowsSymKey(agentA,KAB)=true
knowsSymKey(agentB,KAB)=true
messageField(agentA,agentE,1,FRWVRNB)=CA
messageField(agentA,agentE,1,REQCOM)=CA
messageField(agentA,agentE,2,FRWVRNB)=KAB
messageField(agentA,agentE,2,REQCOM)=NA
messageField(agentA,agentE,3,FRWVRNB)=NB
messageField(agentB,agentE,1,ENCKBS)=CB
messageField(agentB,agentE,2,ENCKBS)=CA
messageField(agentB,agentE,3,ENCKBS)=NA
messageField(agentB,agentE,4,ENCKBS)=NB
messageField(agentE,agentA,1,GENKEYSES)=CB
messageField(agentE,agentA,2,GENKEYSES)=KAB
messageField(agentE,agentA,3,GENKEYSES)=NA
messageField(agentE,agentA,4,GENKEYSES)=NB
messageField(agentE,agentA,5,GENKEYSES)=CA
messageField(agentE,agentA,6,GENKEYSES)=KAB
messageField(agentE,agentB,1,FRWVRNB)=CA
messageField(agentE,agentB,1,REQCOM)=CA
messageField(agentE,agentB,2,FRWVRNB)=KAB
messageField(agentE,agentB,2,REQCOM)=NA
messageField(agentE,agentB,3,FRWVRNB)=NB
messageField(agentE,agentS,1,ENCKBS)=CB
messageField(agentE,agentS,2,ENCKBS)=CA
messageField(agentE,agentS,3,ENCKBS)=NA
messageField(agentE,agentS,4,ENCKBS)=NB
messageField(agentS,agentE,1,GENKEYSES)=CB
messageField(agentS,agentE,2,GENKEYSES)=KAB
messageField(agentS,agentE,3,GENKEYSES)=NA
messageField(agentS,agentE,4,GENKEYSES)=NB
messageField(agentS,agentE,5,GENKEYSES)=CA
messageField(agentS,agentE,6,GENKEYSES)=KAB
protocolMessage(0,agentA,agentE)=REQCOM
protocolMessage(0,agentE,agentB)=REQCOM
protocolMessage(1,agentB,agentE)=ENCKBS
protocolMessage(1,agentE,agentS)=ENCKBS
protocolMessage(2,agentE,agentA)=GENKEYSES
protocolMessage(2,agentS,agentE)=GENKEYSES
protocolMessage(3,agentA,agentE)=FRWVRNB
protocolMessage(3,agentE,agentB)=FRWVRNB
result=1
step__=9
symEnc(ENCKBS,1,2,4)=KBS
symEnc(FRWVRNB,1,1,2)=KBS
symEnc(FRWVRNB,1,3,3)=KAB
symEnc(GENKEYSES,1,1,4)=KAS
symEnc(GENKEYSES,1,5,6)=KBS
</State 9 (controlled)>
check succeeded: knowsIdentityCertificate(agentB,messageField(agentE,agentB,1,FRWVRNB))=true 
check succeeded: knowsSymKey(agentB,messageField(agentE,agentB,2,FRWVRNB))=true 
check succeeded: knowsSymKey(agentB,KAB)=true 
check succeeded: knowsNonce(agentB,messageField(agentE,agentB,3,FRWVRNB))=true 
check succeeded: knowsNonce(agentB,NB)=true 
check succeeded: internalStateB(agentB)=END_B 
<UpdateSet - 9>
result=1
step__=10
</UpdateSet>
<State 10 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=END_A
internalStateB(agentB)=END_B
internalStateS(agentS)=END_S
knowsIdentityCertificate(agentA,CB)=true
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsIdentityCertificate(agentE,CB)=true
knowsIdentityCertificate(agentS,CA)=true
knowsIdentityCertificate(agentS,CB)=true
knowsNonce(agentA,NA)=true
knowsNonce(agentA,NB)=true
knowsNonce(agentB,NA)=true
knowsNonce(agentE,NA)=true
knowsNonce(agentS,NA)=true
knowsNonce(agentS,NB)=true
knowsSymKey(agentA,KAB)=true
knowsSymKey(agentB,KAB)=true
messageField(agentA,agentE,1,FRWVRNB)=CA
messageField(agentA,agentE,1,REQCOM)=CA
messageField(agentA,agentE,2,FRWVRNB)=KAB
messageField(agentA,agentE,2,REQCOM)=NA
messageField(agentA,agentE,3,FRWVRNB)=NB
messageField(agentB,agentE,1,ENCKBS)=CB
messageField(agentB,agentE,2,ENCKBS)=CA
messageField(agentB,agentE,3,ENCKBS)=NA
messageField(agentB,agentE,4,ENCKBS)=NB
messageField(agentE,agentA,1,GENKEYSES)=CB
messageField(agentE,agentA,2,GENKEYSES)=KAB
messageField(agentE,agentA,3,GENKEYSES)=NA
messageField(agentE,agentA,4,GENKEYSES)=NB
messageField(agentE,agentA,5,GENKEYSES)=CA
messageField(agentE,agentA,6,GENKEYSES)=KAB
messageField(agentE,agentB,1,FRWVRNB)=CA
messageField(agentE,agentB,1,REQCOM)=CA
messageField(agentE,agentB,2,FRWVRNB)=KAB
messageField(agentE,agentB,2,REQCOM)=NA
messageField(agentE,agentB,3,FRWVRNB)=NB
messageField(agentE,agentS,1,ENCKBS)=CB
messageField(agentE,agentS,2,ENCKBS)=CA
messageField(agentE,agentS,3,ENCKBS)=NA
messageField(agentE,agentS,4,ENCKBS)=NB
messageField(agentS,agentE,1,GENKEYSES)=CB
messageField(agentS,agentE,2,GENKEYSES)=KAB
messageField(agentS,agentE,3,GENKEYSES)=NA
messageField(agentS,agentE,4,GENKEYSES)=NB
messageField(agentS,agentE,5,GENKEYSES)=CA
messageField(agentS,agentE,6,GENKEYSES)=KAB
protocolMessage(0,agentA,agentE)=REQCOM
protocolMessage(0,agentE,agentB)=REQCOM
protocolMessage(1,agentB,agentE)=ENCKBS
protocolMessage(1,agentE,agentS)=ENCKBS
protocolMessage(2,agentE,agentA)=GENKEYSES
protocolMessage(2,agentS,agentE)=GENKEYSES
protocolMessage(3,agentA,agentE)=FRWVRNB
protocolMessage(3,agentE,agentB)=FRWVRNB
result=1
step__=10
symEnc(ENCKBS,1,2,4)=KBS
symEnc(FRWVRNB,1,1,2)=KBS
symEnc(FRWVRNB,1,3,3)=KAB
symEnc(GENKEYSES,1,1,4)=KAS
symEnc(GENKEYSES,1,5,6)=KBS
</State 10 (controlled)>
<UpdateSet - 10>
</UpdateSet>
<State 11 (controlled)>
Alice={agentA}
Bob={agentB}
Eve={agentE}
Server={agentS}
internalStateA(agentA)=END_A
internalStateB(agentB)=END_B
internalStateS(agentS)=END_S
knowsIdentityCertificate(agentA,CB)=true
knowsIdentityCertificate(agentB,CA)=true
knowsIdentityCertificate(agentE,CA)=true
knowsIdentityCertificate(agentE,CB)=true
knowsIdentityCertificate(agentS,CA)=true
knowsIdentityCertificate(agentS,CB)=true
knowsNonce(agentA,NA)=true
knowsNonce(agentA,NB)=true
knowsNonce(agentB,NA)=true
knowsNonce(agentE,NA)=true
knowsNonce(agentS,NA)=true
knowsNonce(agentS,NB)=true
knowsSymKey(agentA,KAB)=true
knowsSymKey(agentB,KAB)=true
messageField(agentA,agentE,1,FRWVRNB)=CA
messageField(agentA,agentE,1,REQCOM)=CA
messageField(agentA,agentE,2,FRWVRNB)=KAB
messageField(agentA,agentE,2,REQCOM)=NA
messageField(agentA,agentE,3,FRWVRNB)=NB
messageField(agentB,agentE,1,ENCKBS)=CB
messageField(agentB,agentE,2,ENCKBS)=CA
messageField(agentB,agentE,3,ENCKBS)=NA
messageField(agentB,agentE,4,ENCKBS)=NB
messageField(agentE,agentA,1,GENKEYSES)=CB
messageField(agentE,agentA,2,GENKEYSES)=KAB
messageField(agentE,agentA,3,GENKEYSES)=NA
messageField(agentE,agentA,4,GENKEYSES)=NB
messageField(agentE,agentA,5,GENKEYSES)=CA
messageField(agentE,agentA,6,GENKEYSES)=KAB
messageField(agentE,agentB,1,FRWVRNB)=CA
messageField(agentE,agentB,1,REQCOM)=CA
messageField(agentE,agentB,2,FRWVRNB)=KAB
messageField(agentE,agentB,2,REQCOM)=NA
messageField(agentE,agentB,3,FRWVRNB)=NB
messageField(agentE,agentS,1,ENCKBS)=CB
messageField(agentE,agentS,2,ENCKBS)=CA
messageField(agentE,agentS,3,ENCKBS)=NA
messageField(agentE,agentS,4,ENCKBS)=NB
messageField(agentS,agentE,1,GENKEYSES)=CB
messageField(agentS,agentE,2,GENKEYSES)=KAB
messageField(agentS,agentE,3,GENKEYSES)=NA
messageField(agentS,agentE,4,GENKEYSES)=NB
messageField(agentS,agentE,5,GENKEYSES)=CA
messageField(agentS,agentE,6,GENKEYSES)=KAB
protocolMessage(0,agentA,agentE)=REQCOM
protocolMessage(0,agentE,agentB)=REQCOM
protocolMessage(1,agentB,agentE)=ENCKBS
protocolMessage(1,agentE,agentS)=ENCKBS
protocolMessage(2,agentE,agentA)=GENKEYSES
protocolMessage(2,agentS,agentE)=GENKEYSES
protocolMessage(3,agentA,agentE)=FRWVRNB
protocolMessage(3,agentE,agentB)=FRWVRNB
result=1
step__=10
symEnc(ENCKBS,1,2,4)=KBS
symEnc(FRWVRNB,1,1,2)=KBS
symEnc(FRWVRNB,1,3,3)=KAB
symEnc(GENKEYSES,1,1,4)=KAS
symEnc(GENKEYSES,1,5,6)=KBS
</State 11 (controlled)>
parsing file C:\Users\gioeg\AProVerDirectory\Aprover\src\main\resources\AProVerTest\TestYAHALOM.asm
file successfully parsed for asm TestYAHALOM
